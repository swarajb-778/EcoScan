# Multi-stage build for optimized production image
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS runner

# Create app directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S ecoscan -u 1001

# Copy built application
COPY --from=builder --chown=ecoscan:nodejs /app/build ./build
COPY --from=builder --chown=ecoscan:nodejs /app/package*.json ./
COPY --from=builder --chown=ecoscan:nodejs /app/static ./static

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Switch to non-root user
USER ecoscan

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# Start the application
CMD ["node", "build"] 